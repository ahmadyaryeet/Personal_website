{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saroy\\\\Desktop\\\\Coding_Projects\\\\Cv_Website\\\\Simple\\\\Personal_website\\\\src\\\\components\\\\Plaribus_page.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaribusPokerAI() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plaribus Poker AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The Plaribus Poker AI is a cutting-edge artificial intelligence system designed to excel at 6-player poker. It represents a significant achievement in the field of game theory and machine learning. So the motivation to recreate Pluribus stemmed from reading Meta's breakthrough paper on it, linked \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://ai.meta.com/blog/pluribus-first-ai-to-beat-pros-in-6-player-poker/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 109\n      }, this), \". They managed to make two major breakthroughs: the first being creating an AI capable of playing six-player poker at a superhuman level, a game far more complex than previous AI benchmarks like chess or Go. Traditionally, AI strategies in two-player zero-sum games, like chess, are based on computing a Nash equilibrium, which guarantees that the AI won't lose no matter what the opponent does. However, in a game with more than two players, computing a Nash equilibrium becomes impractical because it's computationally infeasible and inefficient. As a result, Pluribus had to rely on different algorithmic approaches that allowed it to defeat human players without needing to compute exact Nash equilibria. The second breakthrough was achieving this with astonishing efficiency. Unlike previous AI projects, which required massive computational resources costing millions, Pluribus was trained in just eight days using a 64-core server with less than 512 GB of RAM and no GPUs. The entire training cost less than $150. This efficiency made it feasible for someone like me to consider recreating the system myself.      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"With Plaribus there are there main promblems each of which I will expand on below. Clustering, Training, Developing an interactive enviroment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Key Features:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Capable of beating world's strongest players in 6-player poker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Trained and tested on an Amazon EC2 machine with 128 cores and 512GB of RAM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Implemented in Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Utilizes advanced game theory and machine learning algorithms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Technical Details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The AI was developed using a combination of counterfactual regret minimization (CFR) and deep learning techniques. It required extensive computational resources to train and optimize its strategy across the vast game tree of 6-player poker.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Main Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = PlaribusPokerAI;\nexport default PlaribusPokerAI;\nvar _c;\n$RefreshReg$(_c, \"PlaribusPokerAI\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","PlaribusPokerAI","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","to","_c","$RefreshReg$"],"sources":["C:/Users/saroy/Desktop/Coding_Projects/Cv_Website/Simple/Personal_website/src/components/Plaribus_page.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PlaribusPokerAI() {\r\n  return (\r\n    <div className=\"project-page\">\r\n      <h1>Plaribus Poker AI</h1>\r\n      <p>\r\n        The Plaribus Poker AI is a cutting-edge artificial intelligence system designed to excel at 6-player poker. \r\n        It represents a significant achievement in the field of game theory and machine learning.\r\n\r\n        So the motivation to recreate Pluribus stemmed from reading Meta's breakthrough paper on it, linked <a href=\"https://ai.meta.com/blog/pluribus-first-ai-to-beat-pros-in-6-player-poker/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. They managed to make two major breakthroughs: the first being creating an AI capable of playing six-player poker at a superhuman level, a game far more complex than previous AI benchmarks like chess or Go. Traditionally, AI strategies in two-player zero-sum games, like chess, are based on computing a Nash equilibrium, which guarantees that the AI won't lose no matter what the opponent does. However, in a game with more than two players, computing a Nash equilibrium becomes impractical because it's computationally infeasible and inefficient. As a result, Pluribus had to rely on different algorithmic approaches that allowed it to defeat human players without needing to compute exact Nash equilibria. The second breakthrough was achieving this with astonishing efficiency. Unlike previous AI projects, which required massive computational resources costing millions, Pluribus was trained in just eight days using a 64-core server with less than 512 GB of RAM and no GPUs. The entire training cost less than $150. This efficiency made it feasible for someone like me to consider recreating the system myself.      </p>\r\n      \r\n      <p>With Plaribus there are there main promblems each of which I will expand on below. Clustering, Training, Developing an interactive enviroment</p>\r\n      <h2>Key Features:</h2>\r\n      <ul>\r\n        <li>Capable of beating world's strongest players in 6-player poker</li>\r\n        <li>Trained and tested on an Amazon EC2 machine with 128 cores and 512GB of RAM</li>\r\n        <li>Implemented in Python</li>\r\n        <li>Utilizes advanced game theory and machine learning algorithms</li>\r\n      </ul>\r\n      <h2>Technical Details:</h2>\r\n      <p>\r\n        The AI was developed using a combination of counterfactual regret minimization (CFR) and deep learning techniques. \r\n        It required extensive computational resources to train and optimize its strategy across the vast game tree of 6-player poker.\r\n      </p>\r\n      <Link to=\"/\">Back to Main Page</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaribusPokerAI;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EACzB,oBACED,OAAA;IAAKE,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BH,OAAA;MAAAG,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BP,OAAA;MAAAG,QAAA,GAAG,4SAImG,eAAAH,OAAA;QAAGQ,IAAI,EAAC,4EAA4E;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,qmCAAimC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEl1CP,OAAA;MAAAG,QAAA,EAAG;IAA6I;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpJP,OAAA;MAAAG,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBP,OAAA;MAAAG,QAAA,gBACEH,OAAA;QAAAG,QAAA,EAAI;MAA8D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvEP,OAAA;QAAAG,QAAA,EAAI;MAA2E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpFP,OAAA;QAAAG,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BP,OAAA;QAAAG,QAAA,EAAI;MAA6D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACLP,OAAA;MAAAG,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BP,OAAA;MAAAG,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJP,OAAA,CAACF,IAAI;MAACa,EAAE,EAAC,GAAG;MAAAR,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACK,EAAA,GA1BQX,eAAe;AA4BxB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}